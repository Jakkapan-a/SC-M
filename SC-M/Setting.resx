<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRUVGRUVFRhAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFlZWRdVVVX/VVVV/1pa
        WhEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVVVR5VVVWwU1NTKwAAAABUVFRSVVVV/1VV
        Vf9UVFRPAAAAAFdXVyxVVVWxWFhYHQAAAAAAAAAAAAAAAAAAAABVVVWyVVVV/1VVVfdVVVXGVVVV/lVV
        Vf9VVVX/VVVV/lVVVcVVVVX3VVVV/1VVVbEAAAAAAAAAAAAAAAAAAAAAV1dXLFVVVfdVVVX/VVVV2VRU
        VE9OTk4NTk5ODVRUVFJVVVXhVVVV/1VVVfVVVVUqAAAAAAAAAAAAAAAAAAAAAAAAAABVVVXCVVVV1lxc
        XBlVVVWQVVVV6lVVVepWVlaPWFhYGlVVVeBVVVW8AAAAAAAAAAAAAAAAAAAAAFpaWhFUVFRPVVVV/lRU
        VExUVFSUVVVV/1VVVdtVVVXdVVVV/1RUVJFWVlZQVVVV/VZWVkpaWloRAAAAAFRUVGFVVVX/VVVV/1VV
        Vf5NTU0KVVVV71VVVdhmZmYFSUlJB1VVVd9VVVXtRkZGC1VVVf9VVVX/VVVV/1RUVGFWVlZoVVVV/1VV
        Vf9VVVX/TU1NClVVVe1VVVXZZmZmBUlJSQdVVVXgVVVV7F1dXQtVVVX/VVVV/1VVVf9WVlZoAAAAAFVV
        VRtVVVVRVVVV/lRUVExUVFSUVVVV/1VVVdtVVVXdVVVV/1RUVJFWVlZNVVVV/VRUVExVVVUbAAAAAAAA
        AAAAAAAAAAAAAFVVVcJVVVXWXFxcGVZWVptVVVXxVVVV8VRUVJpVVVUYVVVV11VVVbwAAAAAAAAAAAAA
        AAAAAAAAAAAAAFNTUytVVVX2VVVV/1VVVdlUVFRMVVVVA1VVVQNWVlZNVVVV2lVVVf9VVVX1V1dXKQAA
        AAAAAAAAAAAAAAAAAABVVVWtVVVV/1VVVfdVVVXFVVVV/lVVVf9VVVX/VVVV/lVVVcVVVVX4VVVV/1VV
        VawAAAAAAAAAAAAAAAAAAAAAVVVVG1VVVbBXV1csAAAAAFVVVVFVVVX/VVVV/1VVVU4AAAAAVVVVLVVV
        VbBVVVUbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSUlIZVVVV/1VVVf9ZWVkUAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFZWVnRUVFRwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD+fwAA7ncAAMADAADjxwAA5CcAAOgXAACJkQAAiZEAAOgX
        AADkJwAA48cAAMADAADudwAA/n8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFVVVcJVVVXMVVVVzFVVVbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABVVVUYVVVV/1VVVf9VVVX/VVVV/ltbWw4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRUVENVVVX/VVVV/1VVVf9VVVX/VFRUOgAAAAAAAAAAAAAAAAAA
        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
        VcdWVlZfWFhYGlVVVQNVVVUDWFhYGlZWVl9VVVXIVVVV/1VVVf9VVVX/VVVV/1VVVf9VVVX/VlZWmAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRUVExVVVX+VVVV/1VVVf9VVVX/VVVV/1VV
        Vf9VVVX/VVVV/1VVVf9VVVX/VVVV/1VVVf9VVVX/VVVV/1VVVf9VVVX/VVVV/1VVVf9VVVX/VVVV/1VV
        Vf9VVVX+VFRUTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVlZWa1VVVf9VVVX/VVVV/1VV
        Vf9VVVXdVVVVY1VVVcVVVVX/VVVV/1VVVf9VVVX/VVVV/1VVVf9VVVX/VVVV/lVVVbdUVFRhVVVV31VV
        Vf9VVVX/VVVV/1VVVf9UVFRqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVVVVdVVV
        Vf9VVVX/VlZWpFtbWw4AAAAAAAAAAFNTUyhVVVW3VVVV/1VVVf9VVVX/VVVV/1VVVbVVVVUeAAAAAAAA
        AABVVVUPVFRUplVVVf9VVVX/VlZWdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVlZWdFVVVV0AAAAAAAAAAAAAAAAAAAAAAAAAAFVVVWxVVVX/VVVV/1VVVf9VVVX/VFRUZwAA
        AAAAAAAAAAAAAAAAAAAAAAAAVlZWX1RUVHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVlZWRFVVVf9VVVX/VVVV/1VV
        Vf9WVlY7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVVVUbVVVV/1VV
        Vf9VVVX/VVVV/lBQUBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABVVVXSVVVV3VVVVd1VVVXEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////D////w////8P////D///HgeP/ggBB/4AAAf+AfgH/wf
        +D/+PDx//HAOP/xgBj/4wAcfgMPDAYDDwwGAw8MBgMPDAfjABx/8YAY//HAOP/48PH/8H/g/+AfgH/gA
        AB/4IAQf/HgeP//8P////D////w////8P///////
</value>
  </data>
</root>